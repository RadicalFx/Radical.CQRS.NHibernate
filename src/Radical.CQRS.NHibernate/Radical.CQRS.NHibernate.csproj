<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{51419837-D81B-4AB7-850C-A628732AAFE7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Radical.CQRS</RootNamespace>
    <AssemblyName>Radical.CQRS.NHibernate</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Iesi.Collections, Version=4.0.0.0, Culture=neutral, PublicKeyToken=aa95f207798dfdb4, processorArchitecture=MSIL">
      <HintPath>..\packages\Iesi.Collections.4.0.0.4000\lib\net40\Iesi.Collections.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>..\packages\Newtonsoft.Json.6.0.8\lib\net45\Newtonsoft.Json.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="NHibernate, Version=4.0.0.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4, processorArchitecture=MSIL">
      <HintPath>..\packages\NHibernate.4.0.3.4000\lib\net40\NHibernate.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Radical, Version=1.5.2.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\Radical.1.5.2.0\lib\net45\Radical.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Radical.CQRS, Version=0.1.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\Radical.CQRS.0.1.0\lib\net45\Radical.CQRS.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="NHibernateDomainEventCommit.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Runtime\SyncRepository.cs" />
    <Compile Include="Services\AggregateFinderProvider%28TSession%29.cs" />
    <Compile Include="Services\AggregateStateFinderProvider%28TSession%29.cs" />
    <Compile Include="Services\DefaultAggregateFinder.cs" />
    <Compile Include="Services\DefaultAggregateStateFinder.cs" />
    <Compile Include="Services\RepositoryFactory.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Maps\" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>if exist "$(SolutionDir)artifacts\$(ConfigurationName)\$(ProjectName)\lib\net45". (
    if exist "$(SolutionDir)artifacts\$(ConfigurationName)\$(ProjectName)\lib\net45\it-it". (
        del "$(SolutionDir)artifacts\$(ConfigurationName)\$(ProjectName)\lib\net45\it-it\*.*"  /Q
        rd "$(SolutionDir)artifacts\$(ConfigurationName)\$(ProjectName)\lib\net45\it-it"
    )
    
    del "$(SolutionDir)artifacts\$(ConfigurationName)\$(ProjectName)\lib\net45\*.*"  /Q
    echo "Build/NuGet folder purged".
) else (
    echo "no Build/NuGet folder to purge.".
)

if not exist "$(SolutionDir)artifacts\$(ConfigurationName)\$(ProjectName)\lib\net45". (
    md "$(SolutionDir)artifacts\$(ConfigurationName)\$(ProjectName)\lib\net45"
    echo "Build/NuGet folder created.".
)

if not exist "$(SolutionDir)artifacts\$(ConfigurationName)\$(ProjectName)\lib\net45\it-IT". (
    md "$(SolutionDir)artifacts\$(ConfigurationName)\$(ProjectName)\lib\net45\it-IT"
    echo "Build/NuGet (resources) folder created.".
)

copy "$(TargetDir)$(TargetName).*" "$(SolutionDir)artifacts\$(ConfigurationName)\$(ProjectName)\lib\net45\$(TargetName).*" /B /Y
copy "$(TargetDir)it-IT\$(TargetName).resources.*" "$(SolutionDir)artifacts\$(ConfigurationName)\$(ProjectName)\lib\net45\it-IT\$(TargetName).resources.*" /B /Y

del "$(SolutionDir)artifacts\$(ConfigurationName)\$(ProjectName)\lib\net45\$(TargetFileName).config"</PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>